#!perl

use strict;
use warnings;
use File::Spec;
use Getopt::Long qw/GetOptions :config bundling/;
use Pod::Usage qw/pod2usage/;
use Config;
use autodie;
use File::Temp 'tempfile';
use Term::ANSIColor;

use App::pmgrep::util;

my $opt = +{};

GetOptions(
    'v|verbose!'     => \$opt->{verbose},
    'i|ignore-case!' => \$opt->{ignore_case},
    's|skip-pod!'    => \$opt->{skip_pod},
    'q|quickfix!'    => \$opt->{quickfix},
    'h|help!'        => \$opt->{help},
    'V|version!'     => \$opt->{version},
);

pod2usage 1 if $opt->{help} || scalar @ARGV < 2;

if ($opt->{version}) {
    warn "App::pmgrep v$App::pmgrep::VERSION\n"; 
    exit;
}

main(@ARGV);
exit;

sub main {
    my $search = shift;
    my @modules = @_;

    for my $module (@modules) {
        my($packlist) = App::pmgrep::util::locate_pack($module);

        unless ($packlist) {
            warn "$module is not installed.\n";
            next;
        }

        my @cmds = App::pmgrep::util::command($opt);
        $search = "'$search'";
        push @cmds, $search;

        my @filelist = App::pmgrep::util::fixup_packilist($packlist);
        for my $file (@filelist) {
            if( $opt->{verbose} ){
                my $mod = Module::Info::File->new_from_file($file);
                my $display_filename = Term::ANSIColor::colored( $mod->name, 'bold green' );
                warn $display_filename;
            }

            if($opt->{skip_pod}){
                my ($tempfh, $tempname) = tempfile;
                print $tempfh App::pmgrep::util::pod_skip(slurp($file));
                close $tempfh;
                $file = $tempname;
            }

            my $cmd = join(" ", (@cmds, $file));
            system($cmd);
            warn $cmd if $opt->{verbose};
        }
    }
}

__END__

=head1 NAME

pm-grep - this will search(Grep) modules in the distribution.

=head1 USAGE

pm-grep [options] Search-String Module ...

=head1 OPTIONS

=over 4

=item -v,--verbose

Turns on chatty output

=item -s,--skip-pod

Skip Pod

=item -q,--quickfix

Display for quickfix (vim / emacs?)

=item -i, --ignore-case

Ignore case in the search strings.

=item -h,--help

This help message

=item -V,--version

Show version

=back

=head1 OTHER TOOLS

-head2 Vim integration

use pmgrep.vim

=cut


